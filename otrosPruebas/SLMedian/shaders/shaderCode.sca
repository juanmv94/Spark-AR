#define size 2
#define sizediam (2*size+1)
#define dist 0.002


vec4 vecfori(int i,function<vec4(vec2)> tex, vec2 uv) {
	int x=i-size;
	return tex(uv+vec2(x,0)*dist);
}

float vfori(int i,function<vec4(vec2)> tex, vec2 uv) {
	int x=i-size;
	vec4 v=tex(uv+vec2(x,0)*dist);
	return v.r+v.g+v.b;
}

function<vec4(vec2)> median(function<vec4(vec2)> tex) {
    // Creating and returning a lambda function
    return [](vec2 uv) {
		float o[sizediam];
		for (int i=0;i<sizediam;i++) o[i]=vfori(i,tex,uv);
		int indexes[sizediam];
		for (int i=0;i<sizediam;i++) indexes[i]=i;
		 
		//Insertion sort
		int i, j;
		int key;
		for (i = 1; i < sizediam; i++)
		{
			key = indexes[i];
			j = i - 1;
			/* Move elements of arr[0..i-1], that are
			greater than key, to one position ahead
			of their current position */
			while (j >= 0 && o[indexes[j]] > o[key]) {
				indexes[j+1] = indexes[j];
				j--;
			}
			indexes[j+1] = key;
		}
		///////////
		
		return vecfori(indexes[sizediam/2+1],tex,uv);
    };
 }
